rsconnect::accountInfo(rsconnect::setAccountInfo(name='cage',
token='D266737D69522B038716E0A9454432AE',
secret='<SECRET>'))
rsconnect::accounts(rsconnect::setAccountInfo(name='cage',
token='D266737D69522B038716E0A9454432AE',
secret='<SECRET>'))
install.packages("RCurl")
secret='<SECRET>'))
Sys.timezone(location = TRUE)
Sys.timezone(location = "HAITI")
Sys.timezone(location = "JAMAICA")
Sys.timezone(location = "America/Los_Angeles⁠")
Sys.timezone("America/Los_Angeles⁠")
Sys.timezone("HT⁠")
Sys.timezone(as.POSIXct(America/Los_Angeles⁠)")
force_tz(x, "Pacific/Auckland")
lubridate::force_tz(x, "Pacific/Auckland")
lubridate::force_tz("Pacific/Auckland")
lubridate::force_tz(x, "Pacific/Auckland")
Sys.time()
Sys.time("HT")
as.POSIXlt.POSIXct(x, tz = tz)
as.POSIXlt.POSIXct(x, tz = "HT")
install.packages("shinydashboard")
shiny::icon(lib = "glyphicon")
shiny::icon()
shiny::icon("deposit.png")
iconv(12)
iconv(12,"latin1")
iconv(12,"latin1")
renderPlot(
df_variables%>%
ggplot(aes(x = get(input$variable1), y = get(input$variable2)))+
#geom_point(aes(color = get(input$Groups)),size=5)+#
geom_point(aes(color = "red"),size=3)+#
geom_smooth(method='lm',se=F,size=1.5)+
xlab(input$variable1)+ylab(input$variable2)+
ggtitle(paste("Relation between",input$variable2,"and",input$variable1))+
theme_classic()+
theme(legend.position = "none",legend.title = element_blank())
)
renderPlot(
df_variables%>%
ggplot(aes(x = get(input$variable1), y = get(input$variable2)))+
#geom_point(aes(color = get(input$Groups)),size=5)+#
geom_point(colour = "orangered",size=3)+#
geom_smooth(method='lm',se=F,size=1)+
xlab(input$variable1)+ylab(input$variable2)+
ggtitle(paste("Relation between",input$variable2,"and",input$variable1))+
theme_classic()+
theme(legend.position = "none",legend.title = element_blank())
)
colors()
library(flexdashboard)
library(shiny)
library(ggplot2)
library(dplyr)
library(dygraphs)
#df=read.csv("C:/Users/Diaraye/Documents/Raul/GitHub/BanksHT/BalanceSheet_withoutDuplicates.csv")
#write.csv(df,"balancesheet.csv",row.names = F)
df=read.csv("balancesheet.csv")
#df_bks=df[,c("BNC","BPH" ,"BUH" ,"CAPITALBK" ,"SOGEBK","UNIBNK","SOGEBL","CBNA",  "SCOTIA","BICH" ,"SOCABK","PROMOBK","SOCABL" ,"BHD..","BHD")]
df$Total1=rowSums(df[,c("BNC","BPH" ,"BUH" ,"CAPITALBK" ,"SOGEBK","UNIBNK","SOGEBL","CBNA",  "SCOTIA","BICH" ,"SOCABK","PROMOBK","SOCABL" ,"BHD..","BHD")],na.rm = T)
#View(do.call(cbind,list(fvariable1("Asset"),fvariable1("Liability"))) )
##################################3
fvariables_xts<-function(){
fvariable1<-function(filter){
dat=df%>%
select(Date,Parts1_en,TOTAL)%>%group_by(Parts1_en,Date,)%>%
summarise(Total=sum(TOTAL,na.rm = T))%>%
filter(Parts1_en==filter)%>%data.frame()
return(dat$Total
# xts::xts(dat$Total,order.by = as.Date(dat$Date))
)
}
###
fvariable2<-function(filter){
dat=df%>%
select(Date,Parts2_en,TOTAL)%>%group_by(Parts2_en,Date,)%>%
summarise(Total=sum(TOTAL,na.rm = T))%>%
filter(Parts2_en==filter)%>%data.frame()
return(dat$Total
#xts::xts(dat$Total,order.by = as.Date(dat$Date))
)
}
##
lparts1=unique(df$Parts1_en)
listXTS_parts1=NULL
for (i in lparts1) {
listXTS_parts1[[i]]=fvariable1(filter=i)
}
######
lparts2=c("Liquid asset","Non-liquid asset","Deposit","Demand bonds" ,"Term bonds",   "Other liabilities")#unique(df$Parts2_en)
listXTS_parts2=NULL
for (i in lparts2) {
listXTS_parts2[[i]]=fvariable2(filter=i)
}
#####
mergeList<-function(x,y){
keys <- unique(c(names(x), names(y)))
setNames(mapply(c, x[keys], y[keys]), keys)
}
lu=mergeList(listXTS_parts1,listXTS_parts2)
colnames(lu)=c(lparts1,lparts2)
col_lu=colnames(lu)
lu=cbind.data.frame(lu)
dates=sort(unique(df$Date))
fvar_xts<-function(x){
y=xts::to.quarterly(xts::xts(x,order.by = as.Date(dates)))[,4]
y=xts::xts(x,order.by = as.Date(dates))
names(y)=names(x)
return(y
#xts::to.quarterly(xts::xts(x,order.by = as.Date(dates)))[,4]
)
}
zo=NULL
for (i in 1:length(col_lu)) {
zo[[i]]=fvar_xts(lu[,col_lu[i]])/1000000 # in thousand HTG
}
names(zo)=col_lu
return(zo)
}
df_variables=do.call(cbind,fvariables_xts())
colors()
remotes::install_github("rstudio/bslib")
library(flexdashboard)
#library(shinydashboard)
library(ggplot2)
#library(shinydashboard)
library(ggplot2)
library(dplyr)
library(dygraphs)
library(forcats)
#library(shinydashboard)
library(ggplot2)
library(dplyr)
library(dygraphs)
library(forcats)
##########################333
gtheme<-function(...){
theme_classic()+
theme(axis.ticks = element_blank(),
axis.line=element_blank(),
axis.text = element_text(colour="black"),
plot.margin = margin(1,1,1,3)
)+
theme(legend.position = "none", legend.direction = "horizontal")
}
##############################
#df=read.csv("C:/Users/Diaraye/Documents/Raul/GitHub/BanksHT/BalanceSheet_withoutDuplicates.csv")
#write.csv(df,"balancesheet.csv",row.names = F)
df=read.csv("balancesheet.csv")
#### remove '-' in names of parts
df$Parts1_en<-gsub('[-]',' ',df$Parts1_en)
df$Parts2_en<-gsub('[-]',' ',df$Parts2_en)
View(df)
##############################
#df=read.csv("C:/Users/Diaraye/Documents/Raul/GitHub/BanksHT/BalanceSheet_withoutDuplicates.csv")
#write.csv(df,"balancesheet.csv",row.names = F)
df=read.csv("BalanceSheet_withoutDuplicates.csv")
##############################
#df=read.csv("C:/Users/Diaraye/Documents/Raul/GitHub/BanksHT/BalanceSheet_withoutDuplicates.csv")
#write.csv(df,"balancesheet.csv",row.names = F)
df=read.csv("BalanceSheet_withoutDuplicates.csv")
#### remove '-' in names of parts
df$Parts1_en<-gsub('[-]',' ',df$Parts1_en)
df$Parts2_en<-gsub('[-]',' ',df$Parts2_en)
### remove spaces before and after string
df$Parts1_en<-stringr::str_trim(df$Parts1_en,side='both')
df$Parts2_en<-stringr::str_trim(df$Parts2_en,side='both')
#df_bks=df[,c("BNC","BPH" ,"BUH" ,"CAPITALBK" ,"SOGEBK","UNIBNK","SOGEBL","CBNA",  "SCOTIA","BICH" ,"SOCABK","PROMOBK","SOCABL" ,"BHD..","BHD")]
df$Total1=rowSums(df[,c("BNC","BPH" ,"BUH" ,"CAPITALBK" ,"SOGEBK","UNIBNK","SOGEBL","CBNA",  "SCOTIA","BICH" ,"SOCABK","PROMOBK","SOCABL" ,"BHD..","BHD")],na.rm = T)
